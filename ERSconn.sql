CREATE USER ersUser
IDENTIFIED BY ersPass
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE temp;

GRANT connect to ersUser;
GRANT resource to ersUser;
GRANT create session TO ersUser;
GRANT create table TO ersUser;
GRANT create view TO ersUser;

conn ersUser/ersPass

CREATE TABLE REIMBURSEMENTEMPLOYEE (empID NUMBER, empName VARCHAR2(100), CONSTRAINT PK_REIMBUREMENTEMPLOYEE PRIMARY KEY  (empID));
CREATE TABLE REIMBURSEMENTS (reimbursementID number, empID NUMBER, amount NUMBER, status VARCHAR2 (25), CONSTRAINT PK_REIMBURSEMENTS PRIMARY KEY  (reimbursementID));
ALTER TABLE REIMBURSEMENTS ADD CONSTRAINT FK_REIMBURSEMENTSempID FOREIGN KEY (empID) REFERENCES REIMBURSEMENTEMPLOYEE (empID);

CREATE SEQUENCE SQ_Employee_PK
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TR_INSERT_Emp
BEFORE INSERT ON REIMBURSEMENTEMPLOYEE
FOR EACH ROW
BEGIN
    SELECT SQ_Employee_PKVAL
    INTO :NEW.REIMBURSEMENTEMPLOYEE_Id FROM DUAL;
END;
/

CREATE SEQUENCE SQ_Reimbursement_PK
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TR_INSERT_Reimbursement
BEFORE INSERT ON REIMBUREMENTS
FOR EACH ROW
BEGIN
    SELECT SQ_Reimbursement_PKVAL
    INTO :NEW.REIMBURSEMENTS_Id FROM DUAL;
END;
/

CREATE OR REPLACE PROCEDURE make_new_emp(emp_name IN VARCHAR2) 
AS
BEGIN
INSERT INTO REIMBURSEMENTEMPLOYEE (EMPID, EMPNAME) VALUES (0, emp_name);
END;
/

CREATE OR REPLACE PROCEDURE make_new_reimbursement(emp_IDnumber IN NUMBER, reimbursementValue IN NUMBER) 
AS
BEGIN
INSERT INTO REIMBURSEMENTS (reimbursementID, empID, amount, status) VALUES (0, emp_IDnumber, reimbursementValue, 'pending');
END;
/

CREATE OR REPLACE PROCEDURE manager_decision (reimbursementIdentity IN NUMBER, managerdecision IN VARCHAR2)
AS
BEGIN
    UPDATE REIMBURSEMENTS SET status = managerdecision WHERE reimbursementID = reimbursementIdentity;
END;
/
INSERT INTO REIMBURSEMENTEMPLOYEE (EMPID, EMPNAME) VALUES (1, 'TestBoi');